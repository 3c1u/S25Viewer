name: CMake

on:
  push:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: 5.15.1
    - name: Create Build Environment
      run: cmake -E make_directory build
    - name: Configure CMake
      shell: bash
      working-directory: build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - name: Build
      working-directory: build
      shell: bash
      run: |
        cargo build --release
        cmake --build . --config $BUILD_TYPE
        mkdir S25Viewer_win32
        cp ./Release/S25Viewer.exe ./S25Viewer_win32
        cd S25Viewer_win32
        windeployqt --qmldir ../../ S25Viewer.exe
        cd ../../
    - uses: actions/upload-artifact@v2
      with:
        name: S25Viewer_win32
        path: ${{runner.workspace}}/build/S25Viewer_win32/
